{"version":3,"sources":["webpack:///./node_modules/three/examples/jsm/physics/AmmoPhysics.js","webpack:///./node_modules/three/examples/jsm/libs/stats.module.js","webpack:///./src/webGl/webGl_box.js","webpack:///./node_modules/three/examples/jsm/controls/OrbitControls.js"],"names":["async","AmmoPhysics","window","console","error","AmmoLib","Ammo","frameRate","collisionConfiguration","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","broadphase","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","world","btDiscreteDynamicsWorld","setGravity","btVector3","worldTransform","btTransform","getShape","geometry","parameters","type","sx","undefined","width","sy","height","sz","depth","shape","btBoxShape","setMargin","radius","btSphereShape","meshes","meshMap","WeakMap","addMesh","mesh","mass","isInstancedMesh","handleInstancedMesh","isMesh","handleMesh","position","quaternion","transform","setIdentity","setOrigin","x","y","z","setRotation","btQuaternion","w","motionState","btDefaultMotionState","localInertia","calculateLocalInertia","rbInfo","btRigidBodyConstructionInfo","body","btRigidBody","addRigidBody","push","set","array","instanceMatrix","bodies","i","count","index","setFromOpenGLMatrix","slice","setMeshPosition","get","setAngularVelocity","setLinearVelocity","setWorldTransform","lastTime","step","time","performance","now","delta","stepSimulation","l","length","j","getMotionState","getWorldTransform","getOrigin","getRotation","compose","needsUpdate","setInterval","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","Stats","mode","container","document","createElement","addPanel","panel","appendChild","dom","showPanel","id","children","style","display","cssText","addEventListener","event","preventDefault","beginTime","Date","prevTime","frames","fpsPanel","Panel","msPanel","self","memory","memPanel","REVISION","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","this","domElement","setMode","name","fg","bg","min","Infinity","max","round","Math","PR","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","canvas","context","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","value","maxValue","drawImage","camera","scene","renderer","stats","physics","boxes","spheres","init","THREE","innerWidth","innerHeight","lookAt","background","hemiLight","intensity","add","dirLight","castShadow","shadow","zoom","floor","color","receiveShadow","material","matrix","geometryBox","setUsage","setPosition","random","setMatrixAt","setColorAt","setHex","geometrySphere","antialias","setPixelRatio","setSize","shadowMap","enabled","outputEncoding","querySelector","controls","OrbitControls","target","animate","requestAnimationFrame","render","_changeEvent","_startEvent","_endEvent","object","super","warn","minDistance","maxDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","listenToKeyEvents","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","isFinite","makeSafe","scale","addScaledVector","panOffset","setFromSpherical","multiplyScalar","zoomChanged","distanceToSquared","EPS","dot","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","handleMouseMoveDolly","handleMouseMovePan","handleMouseUp","handleMouseWheel","handleKeyDown","code","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","handleTouchEnd","pointerType","onMouseDown","onMouseMove","onMouseUp","mouseAction","focus","button","ctrlKey","metaKey","shiftKey","DOLLY_ROTATE","passive"],"mappings":"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","file":"js/chunk-172a1f4c.57a6b94d.js","sourcesContent":["async function AmmoPhysics() {\n\n\tif ( 'Ammo' in window === false ) {\n\n\t\tconsole.error( 'AmmoPhysics: Couldn\\'t find Ammo.js' );\n\t\treturn;\n\n\t}\n\n\tconst AmmoLib = await Ammo(); // eslint-disable-line no-undef\n\n\tconst frameRate = 60;\n\n\tconst collisionConfiguration = new AmmoLib.btDefaultCollisionConfiguration();\n\tconst dispatcher = new AmmoLib.btCollisionDispatcher( collisionConfiguration );\n\tconst broadphase = new AmmoLib.btDbvtBroadphase();\n\tconst solver = new AmmoLib.btSequentialImpulseConstraintSolver();\n\tconst world = new AmmoLib.btDiscreteDynamicsWorld( dispatcher, broadphase, solver, collisionConfiguration );\n\tworld.setGravity( new AmmoLib.btVector3( 0, - 9.8, 0 ) );\n\n\tconst worldTransform = new AmmoLib.btTransform();\n\n\t//\n\n\tfunction getShape( geometry ) {\n\n\t\tconst parameters = geometry.parameters;\n\n\t\t// TODO change type to is*\n\n\t\tif ( geometry.type === 'BoxGeometry' ) {\n\n\t\t\tconst sx = parameters.width !== undefined ? parameters.width / 2 : 0.5;\n\t\t\tconst sy = parameters.height !== undefined ? parameters.height / 2 : 0.5;\n\t\t\tconst sz = parameters.depth !== undefined ? parameters.depth / 2 : 0.5;\n\n\t\t\tconst shape = new AmmoLib.btBoxShape( new AmmoLib.btVector3( sx, sy, sz ) );\n\t\t\tshape.setMargin( 0.05 );\n\n\t\t\treturn shape;\n\n\t\t} else if ( geometry.type === 'SphereGeometry' || geometry.type === 'IcosahedronGeometry' ) {\n\n\t\t\tconst radius = parameters.radius !== undefined ? parameters.radius : 1;\n\n\t\t\tconst shape = new AmmoLib.btSphereShape( radius );\n\t\t\tshape.setMargin( 0.05 );\n\n\t\t\treturn shape;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tconst meshes = [];\n\tconst meshMap = new WeakMap();\n\n\tfunction addMesh( mesh, mass = 0 ) {\n\n\t\tconst shape = getShape( mesh.geometry );\n\n\t\tif ( shape !== null ) {\n\n\t\t\tif ( mesh.isInstancedMesh ) {\n\n\t\t\t\thandleInstancedMesh( mesh, mass, shape );\n\n\t\t\t} else if ( mesh.isMesh ) {\n\n\t\t\t\thandleMesh( mesh, mass, shape );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction handleMesh( mesh, mass, shape ) {\n\n\t\tconst position = mesh.position;\n\t\tconst quaternion = mesh.quaternion;\n\n\t\tconst transform = new AmmoLib.btTransform();\n\t\ttransform.setIdentity();\n\t\ttransform.setOrigin( new AmmoLib.btVector3( position.x, position.y, position.z ) );\n\t\ttransform.setRotation( new AmmoLib.btQuaternion( quaternion.x, quaternion.y, quaternion.z, quaternion.w ) );\n\n\t\tconst motionState = new AmmoLib.btDefaultMotionState( transform );\n\n\t\tconst localInertia = new AmmoLib.btVector3( 0, 0, 0 );\n\t\tshape.calculateLocalInertia( mass, localInertia );\n\n\t\tconst rbInfo = new AmmoLib.btRigidBodyConstructionInfo( mass, motionState, shape, localInertia );\n\n\t\tconst body = new AmmoLib.btRigidBody( rbInfo );\n\t\t// body.setFriction( 4 );\n\t\tworld.addRigidBody( body );\n\n\t\tif ( mass > 0 ) {\n\n\t\t\tmeshes.push( mesh );\n\t\t\tmeshMap.set( mesh, body );\n\n\t\t}\n\n\n\t}\n\n\tfunction handleInstancedMesh( mesh, mass, shape ) {\n\n\t\tconst array = mesh.instanceMatrix.array;\n\n\t\tconst bodies = [];\n\n\t\tfor ( let i = 0; i < mesh.count; i ++ ) {\n\n\t\t\tconst index = i * 16;\n\n\t\t\tconst transform = new AmmoLib.btTransform();\n\t\t\ttransform.setFromOpenGLMatrix( array.slice( index, index + 16 ) );\n\n\t\t\tconst motionState = new AmmoLib.btDefaultMotionState( transform );\n\n\t\t\tconst localInertia = new AmmoLib.btVector3( 0, 0, 0 );\n\t\t\tshape.calculateLocalInertia( mass, localInertia );\n\n\t\t\tconst rbInfo = new AmmoLib.btRigidBodyConstructionInfo( mass, motionState, shape, localInertia );\n\n\t\t\tconst body = new AmmoLib.btRigidBody( rbInfo );\n\t\t\tworld.addRigidBody( body );\n\n\t\t\tbodies.push( body );\n\n\t\t}\n\n\t\tif ( mass > 0 ) {\n\n\t\t\tmeshes.push( mesh );\n\n\t\t\tmeshMap.set( mesh, bodies );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction setMeshPosition( mesh, position, index = 0 ) {\n\n\t\tif ( mesh.isInstancedMesh ) {\n\n\t\t\tconst bodies = meshMap.get( mesh );\n\t\t\tconst body = bodies[ index ];\n\n\t\t\tbody.setAngularVelocity( new AmmoLib.btVector3( 0, 0, 0 ) );\n\t\t\tbody.setLinearVelocity( new AmmoLib.btVector3( 0, 0, 0 ) );\n\n\t\t\tworldTransform.setIdentity();\n\t\t\tworldTransform.setOrigin( new AmmoLib.btVector3( position.x, position.y, position.z ) );\n\t\t\tbody.setWorldTransform( worldTransform );\n\n\t\t} else if ( mesh.isMesh ) {\n\n\t\t\tconst body = meshMap.get( mesh );\n\n\t\t\tbody.setAngularVelocity( new AmmoLib.btVector3( 0, 0, 0 ) );\n\t\t\tbody.setLinearVelocity( new AmmoLib.btVector3( 0, 0, 0 ) );\n\n\t\t\tworldTransform.setIdentity();\n\t\t\tworldTransform.setOrigin( new AmmoLib.btVector3( position.x, position.y, position.z ) );\n\t\t\tbody.setWorldTransform( worldTransform );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tlet lastTime = 0;\n\n\tfunction step() {\n\n\t\tconst time = performance.now();\n\n\t\tif ( lastTime > 0 ) {\n\n\t\t\tconst delta = ( time - lastTime ) / 1000;\n\n\t\t\t// console.time( 'world.step' );\n\t\t\tworld.stepSimulation( delta, 10 );\n\t\t\t// console.timeEnd( 'world.step' );\n\n\t\t}\n\n\t\tlastTime = time;\n\n\t\t//\n\n\t\tfor ( let i = 0, l = meshes.length; i < l; i ++ ) {\n\n\t\t\tconst mesh = meshes[ i ];\n\n\t\t\tif ( mesh.isInstancedMesh ) {\n\n\t\t\t\tconst array = mesh.instanceMatrix.array;\n\t\t\t\tconst bodies = meshMap.get( mesh );\n\n\t\t\t\tfor ( let j = 0; j < bodies.length; j ++ ) {\n\n\t\t\t\t\tconst body = bodies[ j ];\n\n\t\t\t\t\tconst motionState = body.getMotionState();\n\t\t\t\t\tmotionState.getWorldTransform( worldTransform );\n\n\t\t\t\t\tconst position = worldTransform.getOrigin();\n\t\t\t\t\tconst quaternion = worldTransform.getRotation();\n\n\t\t\t\t\tcompose( position, quaternion, array, j * 16 );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.instanceMatrix.needsUpdate = true;\n\n\t\t\t} else if ( mesh.isMesh ) {\n\n\t\t\t\tconst body = meshMap.get( mesh );\n\n\t\t\t\tconst motionState = body.getMotionState();\n\t\t\t\tmotionState.getWorldTransform( worldTransform );\n\n\t\t\t\tconst position = worldTransform.getOrigin();\n\t\t\t\tconst quaternion = worldTransform.getRotation();\n\t\t\t\tmesh.position.set( position.x(), position.y(), position.z() );\n\t\t\t\tmesh.quaternion.set( quaternion.x(), quaternion.y(), quaternion.z(), quaternion.w() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// animate\n\n\tsetInterval( step, 1000 / frameRate );\n\n\treturn {\n\t\taddMesh: addMesh,\n\t\tsetMeshPosition: setMeshPosition\n\t\t// addCompoundMesh\n\t};\n\n}\n\nfunction compose( position, quaternion, array, index ) {\n\n\tconst x = quaternion.x(), y = quaternion.y(), z = quaternion.z(), w = quaternion.w();\n\tconst x2 = x + x, y2 = y + y, z2 = z + z;\n\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\tarray[ index + 0 ] = ( 1 - ( yy + zz ) );\n\tarray[ index + 1 ] = ( xy + wz );\n\tarray[ index + 2 ] = ( xz - wy );\n\tarray[ index + 3 ] = 0;\n\n\tarray[ index + 4 ] = ( xy - wz );\n\tarray[ index + 5 ] = ( 1 - ( xx + zz ) );\n\tarray[ index + 6 ] = ( yz + wx );\n\tarray[ index + 7 ] = 0;\n\n\tarray[ index + 8 ] = ( xz + wy );\n\tarray[ index + 9 ] = ( yz - wx );\n\tarray[ index + 10 ] = ( 1 - ( xx + yy ) );\n\tarray[ index + 11 ] = 0;\n\n\tarray[ index + 12 ] = position.x();\n\tarray[ index + 13 ] = position.y();\n\tarray[ index + 14 ] = position.z();\n\tarray[ index + 15 ] = 1;\n\n}\n\nexport { AmmoPhysics };\n","var Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time >= prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport default Stats;\n","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { AmmoPhysics } from 'three/examples/jsm/physics/AmmoPhysics.js';\r\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\r\n\r\nlet camera, scene, renderer, stats;\r\nlet physics, position;\r\n\r\nlet boxes, spheres;\r\n\r\n// init();\r\n\r\nexport async function init() {\r\n\r\n  physics = await AmmoPhysics();\r\n  position = new THREE.Vector3();\r\n\r\n  //\r\n\r\n  camera = new THREE.PerspectiveCamera( 50, window.innerWidth / window.innerHeight, 0.1, 100 );\r\n  camera.position.set( - 1, 1.5, 2 );\r\n  camera.lookAt( 0, 0.5, 0 );\r\n\r\n  scene = new THREE.Scene();\r\n  scene.background = new THREE.Color( 0x666666 );\r\n\r\n  const hemiLight = new THREE.HemisphereLight();\r\n  hemiLight.intensity = 0.35;\r\n  scene.add( hemiLight );\r\n\r\n  const dirLight = new THREE.DirectionalLight();\r\n  dirLight.position.set( 5, 5, 5 );\r\n  dirLight.castShadow = true;\r\n  dirLight.shadow.camera.zoom = 2;\r\n  scene.add( dirLight );\r\n\r\n  const floor = new THREE.Mesh(\r\n    new THREE.BoxGeometry( 10, 5, 10 ),\r\n    new THREE.ShadowMaterial( { color: 0x111111 } )\r\n  );\r\n  floor.position.y = - 2.5;\r\n  floor.receiveShadow = true;\r\n  scene.add( floor );\r\n  physics.addMesh( floor );\r\n\r\n  //\r\n\r\n  const material = new THREE.MeshLambertMaterial();\r\n\r\n  const matrix = new THREE.Matrix4();\r\n  const color = new THREE.Color();\r\n\r\n  // Boxes\r\n\r\n  const geometryBox = new THREE.BoxGeometry( 0.1, 0.1, 0.1 );\r\n  boxes = new THREE.InstancedMesh( geometryBox, material, 100 );\r\n  boxes.instanceMatrix.setUsage( THREE.DynamicDrawUsage ); // will be updated every frame\r\n  boxes.castShadow = true;\r\n  boxes.receiveShadow = true;\r\n  scene.add( boxes );\r\n\r\n  for ( let i = 0; i < boxes.count; i ++ ) {\r\n\r\n    matrix.setPosition( Math.random() - 0.5, Math.random() * 2, Math.random() - 0.5 );\r\n    boxes.setMatrixAt( i, matrix );\r\n    boxes.setColorAt( i, color.setHex( 0xffffff * Math.random() ) );\r\n\r\n  }\r\n\r\n  physics.addMesh( boxes, 1 );\r\n\r\n  // Spheres\r\n\r\n  const geometrySphere = new THREE.IcosahedronGeometry( 0.075, 3 );\r\n  spheres = new THREE.InstancedMesh( geometrySphere, material, 100 );\r\n  spheres.instanceMatrix.setUsage( THREE.DynamicDrawUsage ); // will be updated every frame\r\n  spheres.castShadow = true;\r\n  spheres.receiveShadow = true;\r\n  scene.add( spheres );\r\n\r\n  for ( let i = 0; i < spheres.count; i ++ ) {\r\n\r\n    matrix.setPosition( Math.random() - 0.5, Math.random() * 2, Math.random() - 0.5 );\r\n    spheres.setMatrixAt( i, matrix );\r\n    spheres.setColorAt( i, color.setHex( 0xffffff * Math.random() ) );\r\n\r\n  }\r\n\r\n  physics.addMesh( spheres, 1 );\r\n\r\n  //\r\n\r\n  renderer = new THREE.WebGLRenderer( { antialias: true } );\r\n  renderer.setPixelRatio( window.devicePixelRatio );\r\n  renderer.setSize( window.innerWidth, window.innerHeight );\r\n  renderer.shadowMap.enabled = true;\r\n  renderer.outputEncoding = THREE.sRGBEncoding;\r\n  document.querySelector('#box').appendChild( renderer.domElement );\r\n\r\n  stats = new Stats();\r\n  document.querySelector('#box').appendChild( stats.dom );\r\n\r\n  //\r\n\r\n  const controls = new OrbitControls( camera, renderer.domElement );\r\n  controls.target.y = 0.5;\r\n  controls.update();\r\n\r\n  animate();\r\n\r\n}\r\n\r\nfunction animate() {\r\n\r\n  requestAnimationFrame( animate );\r\n\r\n  //\r\n\r\n  let index = Math.floor( Math.random() * boxes.count );\r\n\r\n  position.set( 0, Math.random() + 1, 0 );\r\n  physics.setMeshPosition( boxes, position, index );\r\n\r\n  //\r\n\r\n  index = Math.floor( Math.random() * spheres.count );\r\n\r\n  position.set( 0, Math.random() + 1, 0 );\r\n  physics.setMeshPosition( spheres, position, index );\r\n\r\n  renderer.render( scene, camera );\r\n\r\n  stats.update();\r\n\r\n}","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart );\n\t\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd );\n\t\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove );\n\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly( event ) {\n\n\t\t\tconst dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tconst dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tconst dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseDown( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseMove( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseUp( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\t// Prevent the browser from scrolling.\n\t\t\tevent.preventDefault();\n\n\t\t\t// Manually set the focus since calling preventDefault above\n\t\t\t// prevents the browser from setting it automatically.\n\n\t\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseUp( event ) {\n\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleMouseUp( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault(); // prevent scrolling\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault(); // prevent scrolling\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchEnd( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleTouchEnd( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\tscope.domElement.addEventListener( 'touchstart', onTouchStart, { passive: false } );\n\t\tscope.domElement.addEventListener( 'touchend', onTouchEnd );\n\t\tscope.domElement.addEventListener( 'touchmove', onTouchMove, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n"],"sourceRoot":""}